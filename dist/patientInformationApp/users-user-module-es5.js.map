{"version":3,"sources":["src/app/users/login/login.component.html","src/app/model/user.ts","src/app/users/login/login.component.css","src/app/users/login/login.component.ts","src/app/users/user-routing.module.ts","src/app/users/user.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<section fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <mat-card fxFlex=\\\"500px\\\" fxFlex.xs=\\\"100%\\\">\\r\\n    <mat-card-title fxLayoutAlign=\\\"center center\\\">Login</mat-card-title>\\r\\n\\r\\n    <form [formGroup]=\\\"loginForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"login(loginForm.value)\\\" fxLayout=\\\"column wrap\\\"\\r\\n      fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n      <mat-card-content>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"User Name\\\" formControlName=\\\"username\\\" id=\\\"username\\\">\\r\\n          <mat-error *ngIf=\\\"hasError('username', 'required')\\\">User Name is required</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" id=\\\"password\\\">\\r\\n          <mat-error *ngIf=\\\"hasError('password', 'required')\\\">Password is required</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-card-content>\\r\\n      \\r\\n      <mat-card-actions style=\\\"text-align: center;\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"loginForm.reset()\\\">Reset</button>\\r\\n      </mat-card-actions>\\r\\n\\r\\n    </form>\\r\\n  </mat-card>\\r\\n</section>\"","export class User {\r\n\r\n    id: String;\r\n    username: String;\r\n    password: String;\r\n\r\n}","export default \"mat-form-field{\\r\\n    width: 400px;\\r\\n}\\r\\n\\r\\nmat-card-title{\\r\\n    text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC91c2Vycy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGR7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbn1cclxuXHJcbm1hdC1jYXJkLXRpdGxle1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59Il19 */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Router } from '@angular/router'\r\nimport { User } from '../../model/user';\r\nimport { SharedService } from '../../services/shared.service';\r\nimport { MessageBox, MessageBoxButton } from 'src/app/shared/message-box';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginForm: FormGroup;\r\n  logedUser: User = null;\r\n  @Output() updateView = new EventEmitter();\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private _sharedService: SharedService,\r\n  ) {\r\n    localStorage.removeItem('logedUser');\r\n    this._sharedService.emitChange(null);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required])\r\n    });\r\n\r\n  }\r\n\r\n  public hasError(controlName: string, errorName: string) {\r\n    return this.loginForm.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  public onCancel() {\r\n    //this.location.back();\r\n  }\r\n\r\n  public login(loginFormValue) {\r\n    if (this.loginForm.valid) {\r\n      if (loginFormValue.username === \"admin\" && loginFormValue.password === \"admin\") {\r\n        MessageBox.show(this.dialog, \"Alert\", 'Login Successfully', MessageBoxButton.Ok, \"350px\")\r\n          .subscribe(result => {\r\n            this.logedUser = new User();\r\n            this.logedUser.username = loginFormValue.username;\r\n            this.logedUser.password = loginFormValue.password;\r\n            localStorage.setItem('logedUser', JSON.stringify(this.logedUser));\r\n            this._sharedService.emitChange(this.logedUser);\r\n            this.router.navigate(['/home']);\r\n          });\r\n      }\r\n      else\r\n        MessageBox.show(this.dialog, \"Error\", 'Invalid User Name or Password', MessageBoxButton.Ok, \"350px\");\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst userRoutes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(userRoutes)\r\n  ],\r\n  exports: [RouterModule],\r\n  declarations: []\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UserRoutingModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class UserModule { }\r\n"],"sourceRoot":"webpack:///","file":"users-user-module-es5.js"}