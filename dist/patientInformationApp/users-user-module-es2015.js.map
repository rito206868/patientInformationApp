{"version":3,"sources":["./src/app/users/login/login.component.html","./src/app/model/user.ts","./src/app/users/login/login.component.css","./src/app/users/login/login.component.ts","./src/app/users/user-routing.module.ts","./src/app/users/user.module.ts"],"names":[],"mappings":"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","file":"users-user-module-es2015.js","sourcesContent":["export default \"<section fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <mat-card fxFlex=\\\"500px\\\" fxFlex.xs=\\\"100%\\\">\\r\\n    <mat-card-title fxLayoutAlign=\\\"center center\\\">Login</mat-card-title>\\r\\n\\r\\n    <form [formGroup]=\\\"loginForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"login(loginForm.value)\\\" fxLayout=\\\"column wrap\\\"\\r\\n      fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n      <mat-card-content>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"User Name\\\" formControlName=\\\"username\\\" id=\\\"username\\\">\\r\\n          <mat-error *ngIf=\\\"hasError('username', 'required')\\\">User Name is required</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" id=\\\"password\\\">\\r\\n          <mat-error *ngIf=\\\"hasError('password', 'required')\\\">Password is required</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-card-content>\\r\\n      \\r\\n      <mat-card-actions style=\\\"text-align: center;\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"loginForm.reset()\\\">Reset</button>\\r\\n      </mat-card-actions>\\r\\n\\r\\n    </form>\\r\\n  </mat-card>\\r\\n</section>\"","export class User {\r\n\r\n    id: String;\r\n    username: String;\r\n    password: String;\r\n\r\n}","export default \"mat-form-field{\\r\\n    width: 400px;\\r\\n}\\r\\n\\r\\nmat-card-title{\\r\\n    text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC91c2Vycy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGR7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbn1cclxuXHJcbm1hdC1jYXJkLXRpdGxle1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59Il19 */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Router } from '@angular/router'\r\nimport { User } from '../../model/user';\r\nimport { SharedService } from '../../services/shared.service';\r\nimport { MessageBox, MessageBoxButton } from 'src/app/shared/message-box';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginForm: FormGroup;\r\n  logedUser: User = null;\r\n  @Output() updateView = new EventEmitter();\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private _sharedService: SharedService,\r\n  ) {\r\n    localStorage.removeItem('logedUser');\r\n    this._sharedService.emitChange(null);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required])\r\n    });\r\n\r\n  }\r\n\r\n  public hasError(controlName: string, errorName: string) {\r\n    return this.loginForm.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  public onCancel() {\r\n    //this.location.back();\r\n  }\r\n\r\n  public login(loginFormValue) {\r\n    if (this.loginForm.valid) {\r\n      if (loginFormValue.username === \"admin\" && loginFormValue.password === \"admin\") {\r\n        MessageBox.show(this.dialog, \"Alert\", 'Login Successfully', MessageBoxButton.Ok, \"350px\")\r\n          .subscribe(result => {\r\n            this.logedUser = new User();\r\n            this.logedUser.username = loginFormValue.username;\r\n            this.logedUser.password = loginFormValue.password;\r\n            localStorage.setItem('logedUser', JSON.stringify(this.logedUser));\r\n            this._sharedService.emitChange(this.logedUser);\r\n            this.router.navigate(['/home']);\r\n          });\r\n      }\r\n      else\r\n        MessageBox.show(this.dialog, \"Error\", 'Invalid User Name or Password', MessageBoxButton.Ok, \"350px\");\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst userRoutes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(userRoutes)\r\n  ],\r\n  exports: [RouterModule],\r\n  declarations: []\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UserRoutingModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class UserModule { }\r\n"],"sourceRoot":"webpack:///"}