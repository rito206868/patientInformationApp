try {
    timeout(time: 25, unit: 'MINUTES') {
        node() {
        	
           stage('Angular Build') {
            	
                //checkout application codebase
                git(url:"${APPLICATION_CODEBASE_GIT_REPO}"
                       , branch:"${BRANCH_NAME}",
                        credentialsId:"${NAMESPACE}-health-planner-github-repo-access-secret")
                sh 'ls -lrst'
                
           }
            
            
            stage('Build Docker Image') {
            	
            	sh 'tar -cvf context.tar --exclude=node_modules .'
				
            	
                openshift.withCluster() {
                    openshift.withProject() {
                       
                       	//  Run Docker Strategy Build for Health Planner UI Application
                        openshift.apply(openshift.process("-f", "./build/health-planner-docker-build-template.yaml"))
						openshift.startBuild("health-planner-frontend-docker-image-build", "--from-archive=context.tar", "--follow", "--wait")
						
                    }
                }
            }
			
			stage('UI Deployment') {

                openshift.withCluster() {
                    openshift.withProject() {   

                        // create deployment resources
                        openshift.apply(openshift.process("-f", "./build/frontend-deployment-template.yaml"))

                        def deployment = openshift.selector("dc/healthplanner-frontend")
                        deployment.rollout().status() //follow progress
                    }
                }
            }
        }
    }
} catch (err) {
    echo "in catch block"
    echo "Caught: ${err}"
    currentBuild.result = 'FAILURE'
    throw err
}   